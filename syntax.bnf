<blank>		::= " " | "\t" | "\r" | "\n"
<spc>		::= <blank> | <blank> <nspc>
<nspc>		::= E | <spc>
<alpha>		::= [a-z] | [A-Z]
<idsym>		::= "_"
<digit>		::= [0-9]
<int>		::= <digit> | <digit> <int>
<csym>		::= "!" | "\"" | "#" | "$" | "%" | "&" | "(" | ")" | "*" | "+" | "," | "-" | "." | "/" | ":" | ";" | "<" | "=" | ">" | "?" | "@" | "[" | "]" | "^" | "_"
<cchr>		::= <blank> | <alpha> | <digit> | <csym>
<cesc>		::= "\\" <cchr> | "\\\\" | "\\'"
<cany>		::= <cchr> | <cesc>
<cstr>		::= E | <cany> <cstr>
<char>		::= "'" <cany> <cstr> "'"
<idbeg> 	::= <alpha> | <idsym>
<idchar>	::= <alpha> | <idsym> | <digit>
<idcont>	::= <idchar> | <idchar> <idcont>
<id>		::= <idbeg> | <idbeg> <idcont>
<val>		::= <int> | <id> | <char>
<exprlst>	::= <expr> | <expr> "," <exprlst>
<call>		::= <expr> "(" <nspc> ")" <nspc> | <expr>  "(" <exprlst> ")" <nspc>
<set>		::= <expr> "=" <expr>
<lnot>		::= "!" <expr>
<bnot>		::= "~" <expr>
<pos>		::= "+" <expr>
<neg>		::= "-" <expr>
<eq>		::= <expr> "==" <expr>
<ne>		::= <expr> "!=" <expr>
<lt>		::= <expr> "<" <expr>
<le>		::= <expr> "<=" <expr>
<gt>		::= <expr> ">" <expr>
<ge>		::= <expr> ">=" <expr>
<land>		::= <expr> "&&" <expr>
<lor>		::= <expr> "||" <expr>
<sum>		::= <expr> "+" <expr>
<diff>		::= <expr> "-" <expr>
<prod>		::= <expr> "*" <expr>
<quot>		::= <expr> "/" <expr>
<rem>		::= <expr> "%" <expr>
<band>		::= <expr> "&" <expr>
<bor>		::= <expr> "|" <expr>
<bxor>		::= <expr> "^" <expr>
<shl>		::= <expr> "<<" <expr>
<shr>		::= <expr> ">>" <expr>
<paren>		::= "(" <expr> ")"
<sexpr>		::= <val> | <call> | <set> | <lnot> | <bnot> | <pos> | <neg> | <eq> | <lt> | <le> | <gt> | <ge> | <land> | <lor> | <sum> | <diff> | <prod> | <quot> | <rem> | <band> | <bor> | <bxor> | <shl> | <shr> | <paren>
<expr>		::= <nspc> <sexpr> <nspc>
<fullexpr>	::= <nspc> ";" <nspc> | <expr> ";" <nspc>
<let>		::= <nspc> "let" <spc> <id> <nspc> ";" <nspc> | <nspc> "let" <spc> <id> <nspc> "=" <expr> ";" <nspc>
<iff>		::= <nspc> "if" <nspc> "(" <expr> ")" <stmt>
<if>		::= <iff> | <iff> "else" <stmt>
<while>		::= <nspc> "while" <nspc> "(" <expr> ")" <stmt>
<ret>		::= <nspc> "return" <nspc> ";" <nspc> | <nspc> "return" <expr> ";" <nspc>
<stmt>		::= <fullexpr> | <let> | <if> | <while> | <ret> | <block>
<stmtlist>	::= <nspc> | <stmt> | <stmt> <stmtlist>
<block>		::= <nspc> "{" <stmtlist> "}" <nspc>
<arglst>	::= <nspc> <id> <nspc> | <nspc> <id> <nspc> "," <arglst>
<fn>		::= <nspc> "fn" <spc> <id> <nspc> "(" <nspc> ")" <block> | <nspc> "fn" <spc> <id> <nspc> "(" <arglst> ")" <block>
<prog>		::= <nspc> | <fn> | <fn> <prog>
